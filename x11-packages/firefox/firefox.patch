diff -uNr firefox-105.0.3/browser/installer/package-manifest.in firefox-105.0.3.mod/browser/installer/package-manifest.in
--- firefox-105.0.3/browser/installer/package-manifest.in	2022-10-08 00:25:40.000000000 +0900
+++ firefox-105.0.3.mod/browser/installer/package-manifest.in	2022-10-15 22:40:20.473582334 +0900
@@ -177,7 +177,6 @@
 @RESPATH@/components/nsUpdateService.manifest
 #endif
 @RESPATH@/components/ProcessSingleton.manifest
-@RESPATH@/components/SyncComponents.manifest
 @RESPATH@/components/servicesComponents.manifest
 @RESPATH@/components/servicesSettings.manifest
 @RESPATH@/components/cryptoComponents.manifest
diff -uNr firefox-105.0.3/browser/moz.configure firefox-105.0.3.mod/browser/moz.configure
--- firefox-105.0.3/browser/moz.configure	2022-10-07 22:37:47.000000000 +0900
+++ firefox-105.0.3.mod/browser/moz.configure	2022-10-15 22:21:38.317020036 +0900
@@ -5,11 +5,11 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 imply_option("MOZ_PLACES", True)
-imply_option("MOZ_SERVICES_HEALTHREPORT", True)
-imply_option("MOZ_SERVICES_SYNC", True)
+imply_option("MOZ_SERVICES_HEALTHREPORT", False)
+imply_option("MOZ_SERVICES_SYNC", False)
 imply_option("MOZ_DEDICATED_PROFILES", True)
 imply_option("MOZ_BLOCK_PROFILE_DOWNGRADE", True)
-imply_option("MOZ_NORMANDY", True)
+imply_option("MOZ_NORMANDY", False)
 
 with only_when(target_is_linux & compile_environment):
     option(env="MOZ_NO_PIE_COMPAT", help="Enable non-PIE wrapper")
diff -uNr firefox-105.0.3/build/autoconf/android.m4 firefox-105.0.3.mod/build/autoconf/android.m4
--- firefox-105.0.3/build/autoconf/android.m4	2022-10-07 22:37:47.000000000 +0900
+++ firefox-105.0.3.mod/build/autoconf/android.m4	2022-10-15 09:48:55.153535797 +0900
@@ -6,7 +6,7 @@
 [
 
 case "$target" in
-*-android*|*-linuxandroid*)
+no-android)
     dnl $android_* will be set for us by Python configure.
     directory_include_args="-isystem $android_system -isystem $android_sysroot/usr/include"
 
diff -uNr firefox-105.0.3/build/moz.configure/init.configure firefox-105.0.3.mod/build/moz.configure/init.configure
--- firefox-105.0.3/build/moz.configure/init.configure	2022-10-08 00:40:07.000000000 +0900
+++ firefox-105.0.3.mod/build/moz.configure/init.configure	2022-10-15 09:48:55.153535797 +0900
@@ -466,7 +466,7 @@
     # which presumably has a cleaner and leaner output. Let's refine later.
     os = os.replace("/", "_")
     if "android" in os:
-        canonical_os = "Android"
+        canonical_os = "GNU"
         canonical_kernel = "Linux"
     elif os.startswith("linux"):
         canonical_os = "GNU"
diff -uNr firefox-105.0.3/build/moz.configure/pkg.configure firefox-105.0.3.mod/build/moz.configure/pkg.configure
--- firefox-105.0.3/build/moz.configure/pkg.configure	2022-10-07 22:37:47.000000000 +0900
+++ firefox-105.0.3.mod/build/moz.configure/pkg.configure	2022-10-15 09:48:55.153535797 +0900
@@ -56,7 +56,7 @@
 @imports(_from="os", _import="environ")
 @imports(_from="os", _import="pathsep")
 def pkg_config_vars(target, sysroot_path, multiarch_dir):
-    if sysroot_path and target.kernel != "Darwin":
+    if False:
         return namespace(
             PKG_CONFIG_PATH="",
             PKG_CONFIG_SYSROOT_DIR=sysroot_path,
diff -uNr firefox-105.0.3/build/moz.configure/toolchain.configure firefox-105.0.3.mod/build/moz.configure/toolchain.configure
--- firefox-105.0.3/build/moz.configure/toolchain.configure	2022-10-08 00:40:07.000000000 +0900
+++ firefox-105.0.3.mod/build/moz.configure/toolchain.configure	2022-10-15 17:25:19.398719772 +0900
@@ -1168,8 +1168,6 @@
     ):
         wrapper = list(compiler_wrapper or ())
         flags = []
-        if sysroot.path:
-            flags.extend(("--sysroot", sysroot.path))
         if host_or_target.os == "OSX" and macos_target:
             flags.append("-mmacosx-version-min=%s" % macos_target)
         if provided_compiler:
@@ -1763,17 +1761,7 @@
 
 @depends(cxx_compiler, target)
 def needs_libstdcxx_newness_check(cxx_compiler, target):
-    # We only have to care about this on Linux and MinGW.
-    if cxx_compiler.type == "clang-cl":
-        return
-
-    if target.kernel not in ("Linux", "WINNT"):
-        return
-
-    if target.os == "Android":
-        return
-
-    return True
+    return
 
 
 def die_on_old_libstdcxx():
diff -uNr firefox-105.0.3/dom/media/CubebUtils.cpp firefox-105.0.3.mod/dom/media/CubebUtils.cpp
--- firefox-105.0.3/dom/media/CubebUtils.cpp	2022-10-08 00:40:07.000000000 +0900
+++ firefox-105.0.3.mod/dom/media/CubebUtils.cpp	2022-10-15 21:46:22.863734976 +0900
@@ -61,7 +61,7 @@
 #define PREF_AUDIOIPC_STACK_SIZE "media.audioipc.stack_size"
 #define PREF_AUDIOIPC_SHM_AREA_SIZE "media.audioipc.shm_area_size"
 
-#if (defined(XP_LINUX) && !defined(MOZ_WIDGET_ANDROID)) || \
+#if (defined(XP_LINUX) && !defined(__TERMUX__)) || \
     defined(XP_MACOSX) || (defined(XP_WIN) && !defined(_ARM64_))
 #  define MOZ_CUBEB_REMOTING
 #endif
diff -uNr firefox-105.0.3/dom/media/moz.build firefox-105.0.3.mod/dom/media/moz.build
--- firefox-105.0.3/dom/media/moz.build	2022-10-08 00:40:07.000000000 +0900
+++ firefox-105.0.3.mod/dom/media/moz.build	2022-10-15 21:24:09.117086889 +0900
@@ -318,7 +318,7 @@
     "XiphExtradata.cpp",
 ]
 
-if CONFIG["OS_TARGET"] == "Linux":
+if False:
     UNIFIED_SOURCES += ["UnderrunHandlerLinux.cpp"]
 else:
     UNIFIED_SOURCES += ["UnderrunHandlerNoop.cpp"]
diff -uNr firefox-105.0.3/dom/media/systemservices/VideoEngine.cpp firefox-105.0.3.mod/dom/media/systemservices/VideoEngine.cpp
--- firefox-105.0.3/dom/media/systemservices/VideoEngine.cpp	2022-10-08 00:40:07.000000000 +0900
+++ firefox-105.0.3.mod/dom/media/systemservices/VideoEngine.cpp	2022-10-15 09:48:55.153535797 +0900
@@ -24,7 +24,7 @@
 #define LOG(args) MOZ_LOG(gVideoEngineLog, mozilla::LogLevel::Debug, args)
 #define LOG_ENABLED() MOZ_LOG_TEST(gVideoEngineLog, mozilla::LogLevel::Debug)
 
-#if defined(ANDROID)
+#if defined(ANDROID) && !defined(__TERMUX__)
 int VideoEngine::SetAndroidObjects() {
   LOG(("%s", __PRETTY_FUNCTION__));
 
diff -uNr firefox-105.0.3/dom/system/OSFileConstants.cpp firefox-105.0.3.mod/dom/system/OSFileConstants.cpp
--- firefox-105.0.3/dom/system/OSFileConstants.cpp	2022-10-08 00:25:40.000000000 +0900
+++ firefox-105.0.3.mod/dom/system/OSFileConstants.cpp	2022-10-15 09:48:55.157535800 +0900
@@ -32,7 +32,7 @@
 #  else
 #    include "sys/statvfs.h"
 #  endif  // defined(XP_LINUX)
-#  if !defined(ANDROID)
+#  if !defined(__TERMUX__)
 #    include "sys/wait.h"
 #    include <spawn.h>
 #  endif  // !defined(ANDROID)
@@ -523,7 +523,7 @@
     // The size of |fsblkcnt_t|.
     {"OSFILE_SIZEOF_FSBLKCNT_T", JS::Int32Value(sizeof(fsblkcnt_t))},
 
-#  if !defined(ANDROID)
+#  if !defined(__TERMUX__)
     // The size of |posix_spawn_file_actions_t|.
     {"OSFILE_SIZEOF_POSIX_SPAWN_FILE_ACTIONS_T",
      JS::Int32Value(sizeof(posix_spawn_file_actions_t))},
diff -uNr firefox-105.0.3/ipc/chromium/src/base/lock_impl_posix.cc firefox-105.0.3.mod/ipc/chromium/src/base/lock_impl_posix.cc
--- firefox-105.0.3/ipc/chromium/src/base/lock_impl_posix.cc	2022-10-07 22:37:49.000000000 +0900
+++ firefox-105.0.3.mod/ipc/chromium/src/base/lock_impl_posix.cc	2022-10-15 13:56:29.736757665 +0900
@@ -22,7 +22,7 @@
 // Lock::PriorityInheritanceAvailable still must be checked as the code may
 // compile but the underlying platform still may not correctly support priority
 // inheritance locks.
-#if defined(OS_NACL) || defined(OS_ANDROID)
+#if defined(OS_NACL) || defined(__TERMUX__)
 #  define PRIORITY_INHERITANCE_LOCKS_POSSIBLE() 0
 #else
 #  define PRIORITY_INHERITANCE_LOCKS_POSSIBLE() 1
diff -uNr firefox-105.0.3/memory/build/malloc_decls.h firefox-105.0.3.mod/memory/build/malloc_decls.h
--- firefox-105.0.3/memory/build/malloc_decls.h	2022-10-07 22:37:53.000000000 +0900
+++ firefox-105.0.3.mod/memory/build/malloc_decls.h	2022-10-15 09:48:55.157535800 +0900
@@ -39,7 +39,7 @@
 // consistent declare certain functions as `throw()`, though.
 
 // Bionic and OS X don't seem to care about `throw()`ness.
-#  if defined(ANDROID) || defined(XP_DARWIN)
+#  if defined(__TERMUX__) || defined(XP_DARWIN)
 #    undef NOTHROW_MALLOC_DECL
 #    define NOTHROW_MALLOC_DECL MALLOC_DECL
 // Some places don't care about the distinction.
diff -uNr firefox-105.0.3/memory/build/Mutex.h firefox-105.0.3.mod/memory/build/Mutex.h
--- firefox-105.0.3/memory/build/Mutex.h	2022-10-08 00:40:08.000000000 +0900
+++ firefox-105.0.3.mod/memory/build/Mutex.h	2022-10-15 09:48:55.157535800 +0900
@@ -67,7 +67,7 @@
     // OS_SPINLOCK_INIT initialize the lock to 0 and in both case it's a 32-bit
     // integer.
     mMutex.mUnfairLock = OS_UNFAIR_LOCK_INIT;
-#elif defined(XP_LINUX) && !defined(ANDROID)
+#elif defined(XP_LINUX) && !defined(__TERMUX__)
     pthread_mutexattr_t attr;
     if (pthread_mutexattr_init(&attr) != 0) {
       return false;
@@ -161,7 +161,7 @@
 // initialize the lock to 0 and in both case it's a 32-bit integer.
 #    define STATIC_MUTEX_INIT \
       { .mUnfairLock = OS_UNFAIR_LOCK_INIT }
-#  elif defined(XP_LINUX) && !defined(ANDROID)
+#  elif defined(XP_LINUX) && !defined(__TERMUX__)
 #    define STATIC_MUTEX_INIT PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 #  else
 #    define STATIC_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER
diff -uNr firefox-105.0.3/mozglue/misc/ConditionVariable_posix.cpp firefox-105.0.3.mod/mozglue/misc/ConditionVariable_posix.cpp
--- firefox-105.0.3/mozglue/misc/ConditionVariable_posix.cpp	2022-10-07 22:37:53.000000000 +0900
+++ firefox-105.0.3.mod/mozglue/misc/ConditionVariable_posix.cpp	2022-10-15 23:45:03.008285261 +0900
@@ -23,7 +23,7 @@
 // Android 32-bit & macOS 10.12 has the clock functions, but not
 // pthread_condattr_setclock.
 #if defined(HAVE_CLOCK_MONOTONIC) && \
-    !(defined(__ANDROID__) && !defined(__LP64__)) && !defined(__APPLE__)
+    defined(__TERMUX__)
 #  define CV_USE_CLOCK_API
 #endif
 
diff -uNr firefox-105.0.3/mozglue/misc/StackWalk.cpp firefox-105.0.3.mod/mozglue/misc/StackWalk.cpp
--- firefox-105.0.3/mozglue/misc/StackWalk.cpp	2022-10-08 00:25:41.000000000 +0900
+++ firefox-105.0.3.mod/mozglue/misc/StackWalk.cpp	2022-10-15 09:48:55.157535800 +0900
@@ -692,7 +692,7 @@
   stackEnd = __libc_stack_end;
 #    elif defined(XP_DARWIN)
   stackEnd = pthread_get_stackaddr_np(pthread_self());
-#    elif defined(ANDROID)
+#    elif defined(__TERMUX__)
   pthread_attr_t sattr;
   pthread_attr_init(&sattr);
   pthread_getattr_np(pthread_self(), &sattr);
diff -uNr firefox-105.0.3/nsprpub/pr/src/pthreads/ptsynch.c firefox-105.0.3.mod/nsprpub/pr/src/pthreads/ptsynch.c
--- firefox-105.0.3/nsprpub/pr/src/pthreads/ptsynch.c	2022-10-07 22:37:53.000000000 +0900
+++ firefox-105.0.3.mod/nsprpub/pr/src/pthreads/ptsynch.c	2022-10-15 09:48:55.157535800 +0900
@@ -953,7 +953,7 @@
 #if (defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED)) \
     || (defined(FREEBSD) && __FreeBSD_version < 1200059) \
     || defined(OPENBSD) || defined(BSDI) \
-    || defined(DARWIN)
+    || defined(DARWIN) || defined(__TERMUX__)
 /* union semun is defined by including <sys/sem.h> */
 #else
 /* according to X/OPEN we have to define it ourselves */
diff -uNr firefox-105.0.3/toolkit/components/extensions/storage/moz.build firefox-105.0.3.mod/toolkit/components/extensions/storage/moz.build
--- firefox-105.0.3/toolkit/components/extensions/storage/moz.build	2022-10-07 22:38:01.000000000 +0900
+++ firefox-105.0.3.mod/toolkit/components/extensions/storage/moz.build	2022-10-15 15:38:46.759393613 +0900
@@ -17,7 +17,7 @@
 # a delegate for consumers to use instead. Android Components can then provide
 # an implementation of the delegate that's backed by the Rust component. For
 # details, please see bug 1626506, comment 4.
-if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
+if False:
     EXPORTS.mozilla.extensions.storage += [
         "ExtensionStorageComponents.h",
     ]
diff -uNr firefox-105.0.3/toolkit/components/moz.build firefox-105.0.3.mod/toolkit/components/moz.build
--- firefox-105.0.3/toolkit/components/moz.build	2022-10-08 00:40:08.000000000 +0900
+++ firefox-105.0.3.mod/toolkit/components/moz.build	2022-10-16 00:07:55.637517815 +0900
@@ -95,7 +95,6 @@
         "aboutconfig",
         "narrate",
         "reader",
-        "viaduct",
     ]
 
 if CONFIG["BUILD_CTYPES"]:
diff -uNr firefox-105.0.3/toolkit/moz.configure firefox-105.0.3.mod/toolkit/moz.configure
--- firefox-105.0.3/toolkit/moz.configure	2022-10-08 00:40:08.000000000 +0900
+++ firefox-105.0.3.mod/toolkit/moz.configure	2022-10-15 20:24:12.767380220 +0900
@@ -172,7 +172,7 @@
 # ==============================================================
 @depends(target)
 def midir_linux_support(target):
-    return target.kernel == "Linux" and target.os != "Android"
+    return False
 
 
 @depends(target, midir_linux_support)
@@ -225,7 +225,7 @@
 
 @depends("--enable-audio-backends", target)
 def imply_aaudio(values, target):
-    if any("aaudio" in value for value in values) and target.os != "Android":
+    if any("aaudio" in value for value in values) and False:
         die("Cannot enable AAudio on %s", target.os)
     return any("aaudio" in value for value in values) or None
 
@@ -259,7 +259,7 @@
 
 @depends("--enable-audio-backends", target)
 def imply_opensl(values, target):
-    if any("opensl" in value for value in values) and target.os != "Android":
+    if any("opensl" in value for value in values) and False:
         die("Cannot enable OpenSL on %s", target.os)
     return any("opensl" in value for value in values) or None
 
@@ -2776,8 +2776,6 @@
 # ==============================================================
 @depends(target)
 def oxidized_breakpad(target):
-    if target.kernel == "Linux" and target.os != "Android":
-        return target.cpu in ("x86", "x86_64")
     return False
 
 
@@ -2968,8 +2966,8 @@
 
 # Enable runtime logging
 # ==============================================================
-set_define("MOZ_LOGGING", True)
-set_define("FORCE_PR_LOG", True)
+set_define("MOZ_LOGGING", 0)
+set_define("FORCE_PR_LOG", 0)
 
 # This will enable logging of addref, release, ctor, dtor.
 # ==============================================================
@@ -3189,7 +3187,7 @@
         "Can't find header linux/joystick.h, needed for gamepad support."
         " Please install Linux kernel headers."
     ),
-    when=target_is_linux & compile_environment,
+    when=False,
 )
 
 # Smart card support
